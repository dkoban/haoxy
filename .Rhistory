cascades <- read_csv("~/Documents/hoaxy/cascades.csv")
titles <- cascades$title %>% unique()
# Plot the theoretical model with observed data
k = 5
plots <- list()
for (i in 1:length(titles)){
plots[[i]] <- plot_empirical_theoretical(empirical_data = cascades %>%
filter(title == titles[i]),
baseline_tweet_likelihood = 1)}
# Plot facet grid of articles
plot_empirical_theoretical_facet(empirical_data = cascades %>%
filter(title %in% titles[1:15]),
baseline_tweet_likelihood = 1)
# Plot facet grid of articles: empirical
plot_empirical_facet(empirical_data = cascades %>%
filter(title %in% titles[1:15]))
# Plot facet grid of articles: empirical and theoretical
plot_empirical_theoretical_facet(empirical_data = cascades %>%
filter(title %in% titles[1:12]),
baseline_tweet_likelihood = 1)
# Plot facet grid of articles: empirical
plot_empirical_facet(empirical_data = cascades %>%
filter(title %in% titles[1:12]))
# Plot facet grid of articles: empirical
plot_empirical_facet(empirical_data = cascades %>%
filter(title %in% titles[2:13]))
# Plot facet grid of articles: empirical
plot_empirical_facet(empirical_data = cascades %>%
filter(title %in% titles[2:10]))
plot_empirical_facet(empirical_data = cascades %>%
filter(title %in% titles[10]))
knitr::opts_chunk$set(echo = TRUE)
source("~/Documents/hoaxy/functions.R")
source("~/Documents/hoaxy/functions.R")
library(tidyverse)
library(stringr)
library(hoaxy)
library(RColorBrewer)
hoaxy_key('0880bcabb3msh438e3c173ab19cap10f5a0jsn4713569913e5')
library(hoaxy)
articles <- hx_latest_articles(past_hours = 30)
head(articles)
head(articles$title)
extract_misinfo_tag(articles)
#extract misinfo tags
extract_misinfo_tags <- function(articles){
articles$tag <- NA
for (i in 1:length(articles$site_tags)){
articles$tag[i] <- extract_misinfo_tag(articles$site_tags[i])
}
return(articles$tag)
}
extract_misinfo_tag(articles)
extract_misinfo_tags(articles)
articles <- hx_latest_articles(past_hours = 30)
articles$tag <- extract_misinfo_tags(articles)
misinfo_tags <- c("clickbait", "conspiracy", "junksci",
"junkscience", "hoax", "fake")
misinfo_tags <- c("clickbait", "conspiracy", "junksci",
"junkscience", "hoax", "fake")
articles <- article %>% filter(tag %in% misinfo_tags)
articles <- articles %>% filter(tag %in% misinfo_tags)
articles$tag %>% table()
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
articles
View(articles)
articles$title[4]
articles$title[5]
articles$title[4]
articles$title[3]
View(articles)
articles$title[1]
articles$title
articles$title[488]
paste0("Tag: ", articles$tag[488], " - ", articles$title[488])
paste0(articles$tag[488], " - ", articles$title[488])
nrow(articles[articles$title == articles$title[488],])
edges <- hx_edges(articles$id[1], nodes_limit = 50000)
edges <- hx_edges(articles$id[1])
edges <- hx_edges(articles$id[1], nodes_limit = 50000)
edges <- hx_edges(articles$id[1])
edges <- hx_edges(articles$id[1], nodes_limit = 50000)
articles$id[1]
articles$canonical_url
articles$canonical_url[488]
library(tidyverse)
library(stringr)
library(hoaxy)
library(RColorBrewer)
source("~/Documents/hoaxy/functions.R")
hoaxy_key('0880bcabb3msh438e3c173ab19cap10f5a0jsn4713569913e5')
articles <- hx_latest_articles(past_hours = 30)
hoaxy_key('2b584e8cdcmshd9e59585deed9d6p114a43jsn73cc6214f62d')
articles <- hx_latest_articles(past_hours = 30)
articles$tag <- extract_misinfo_tags(articles)
misinfo_tags <- c("clickbait", "conspiracy", "junksci",
"junkscience", "hoax", "fake")
articles <- articles %>% filter(tag %in% misinfo_tags)
articles$tag %>% table()
paste0(articles$tag[488], " - ", articles$title[488])
View(articles)
articles <- articles %>% filter(tag == "conspiracy")
paste0(articles$tag[1], " - ", articles$title[1])
paste0(articles$tag[1], " - ", articles$title[2])
articles$title[1:5]
edges <- hx_edges(articles$id[5], nodes_limit = 50000)
edges
edges <- hx_edges(articles$id[2], nodes_limit = 50000)
articles$title[1:10]
articles$title[1:5]
edges <- hx_edges(articles$id[4], nodes_limit = 50000)
edges
edges <- hx_edges(articles$id[1:4], nodes_limit = 50000)
edges$id %>% table()
?sample()
sample(articles$id)
sample(articles$id, 3)
sample(articles$id, 3)
sample(articles$id, 3)
sample(articles$id, 3)
sample(articles$id, 3)
sample(articles$id, 3)
sample(articles$id, 3)
sample(articles$id, 3)
sample(articles$id, 3)
for (i in 1:10){
edges <- hx_edges(articles$id[i], nodes_limit = 50000)
print(paste0("Query ", i, " complete: ", nrow(edges), " records"))
}
edges <- list()
for (i in 1:10){
edges[[i]] <- hx_edges(articles$id[i], nodes_limit = 50000)
print(paste0("Query ", i, " complete: ", nrow(edges), " records"))
}
edges <- list()
for (i in 1:10){
edges[[i]] <- hx_edges(articles$id[i], nodes_limit = 50000)
print(paste0("Query ", i, " complete: ", nrow(edges[[i]]), " records"))
}
articles$title[7]
lapply(edges, nrow)
lapply(edges, nrow) %>% unlist()
lapply(edges, nrow) %>% unlist() %>% max()
lapply(edges, nrow) %>% unlist() %>% which.max()
articles$title[edges %>% lapply(nrow) %>% unlist() %>% which.max()]
edges[[7]]
View(edges)
edges[[7]]
edges[[7]] %<% colnames()
edges[[7]] %>% colnames()
top_article <- edges[edges %>% lapply(nrow) %>% unlist() %>% which.max()]
top_article %>% colnames()
top_article <- edges[[edges %>% lapply(nrow) %>% unlist() %>% which.max()]]
top_article %>% colnames()
top_article %>% count(tweet_type)
top_article$tweet_created_at %>% class()
top_article$tweet_created_at[1]
top_article$tweet_created_at[1] %>%
as.POSIXct(format = "%Y-%m-%dT%H:%M:%S.000Z")
top_article$tweet_created_at %>% min()
ggplot(data = top_article,
mapping = aes(x = tweet_created_at,
y = tweet_type)) +
geom_jitter(size = 0.2) +
scale_x_datetime(breaks=date_breaks("24 hour"), labels=date_format("%m-%d")) +
labs(title = edges$title,
x = "Tweet Created At",
y = "Tweet Type")
ggplot(data = top_article,
mapping = aes(x = tweet_created_at,
y = tweet_type)) +
geom_jitter(size = 0.2) +
scale_x_datetime(breaks=date_breaks("24 hour"), labels=date_format("%m-%d")) +
labs(title = edges$title,
x = "Tweet Created At",
y = "Tweet Type")
d
top_article <- edges[[edges %>% lapply(nrow) %>% unlist() %>% which.max()]]
top_article <- top_article %>%
mutate(tweet_created_at = tweet_created_at %>%
as.POSIXct(format = "%Y-%m-%dT%H:%M:%S.000Z"))
top_article <- edges[[edges %>% lapply(nrow) %>% unlist() %>% which.max()]]
top_article <- top_article %>% as_tibble()
top_article %>% colnames()
top_article <- top_article %>%
mutate(tweet_created_at = tweet_created_at %>%
as.POSIXct(format = "%Y-%m-%dT%H:%M:%S.000Z"))
ggplot(data = top_article,
mapping = aes(x = tweet_created_at,
y = tweet_type)) +
geom_jitter(size = 0.2) +
scale_x_datetime(breaks=date_breaks("24 hour"), labels=date_format("%m-%d")) +
labs(title = edges$title,
x = "Tweet Created At",
y = "Tweet Type")
ggplot(data = top_article,
mapping = aes(x = tweet_created_at,
y = tweet_type)) +
geom_jitter(size = 0.2) +
scale_x_datetime(breaks=date_breaks("24 hour"), labels=date_format("%m-%d")) +
labs(title = top_article$title,
x = "Tweet Created At",
y = "Tweet Type")
ggplot(data = top_article,
mapping = aes(x = tweet_created_at,
y = tweet_type)) +
geom_jitter(size = 0.2) +
scale_x_datetime(breaks=date_breaks("24 hour"), labels=date_format("%m-%d")) +
labs(title = top_article$title[1],
x = "Tweet Created At",
y = "Tweet Type")
top_article %>%
mutate(h_hour = min(tweet_created_at)) %>%
mutate(h = as.numeric(difftime(tweet_created_at, h_hour), units = "hours"))
top_article <- top_article %>%
mutate(h_hour = min(tweet_created_at)) %>%
mutate(h = as.numeric(difftime(tweet_created_at, h_hour), units = "hours"))
View(top_article)
time_increments <- top_article$h %>% unique()
time_increments
tibble(t = time_increments)
cumulative_activity_count <- function(x, t){sum(x <= t)}
?tapply()
sapply(top_article$h, cumulative_activity_count(0))
sapply(top_article$h, cumulative_activity_count(t=0))
cumulative_activity_count(top_article$h, 1)
cumulative_activity_count(top_article$h, 2)
cumulative_activity_count(top_article$h, 4)
sapply(1:4, cumulative_activity_count(top_article$h)
)
sapply(1:4, cumulative_activity_count(top_article$h, 1:4))
cumulative_activity_count(top_article$h,1)
for (time in time_increments[1:2]){
cumulative_activity_count(top_article$h,time)}
for (time in time_increments[1:2]){
print(cumulative_activity_count(top_article$h,time))}
for (time in time_increments[1:2]){
print(sum(top_article$h <= time))}
for (time in time_increments[1:5]){
print(sum(top_article$h <= time))}
top_article$h
temp <- top_article$h[0:5]
temp
time_increments[1:5]
for (time in time_increments[1:5]){
print(time)}
for (time in time_increments[1:5]){
print(time)
print(temp)}
for (time in time_increments[1:5]){
#print(time)
print(temp < time)}
for (time in time_increments[1:5]){
#print(time)
print(temp <= time)}
temp <- top_article$h[1:10]
for (time in time_increments[1:5]){
#print(time)
print(temp <= time)}
temp
View(top_article)
tweet_activity_by_hour <- tibble(t = time_increments)
tweet_activity_by_hour <- tibble(t = time_increments)
tweet_activity_by_hour <- tibble(t = time_increments,
cum_activity = NA)
tweet_activity_by_hour <- tibble(t = time_increments,
cum_activity = NA)
for (time in time_increments){
tweet_activity_by_hour$cum_activity[time] = sum(temp <= time)
}
tweet_activity_by_hour
tweet_activity_by_hour <- tibble(t = time_increments,
cum_activity = NA)
for (i in 1:length(time_increments)){
tweet_activity_by_hour$cum_activity[i] = sum(temp <= time_increments[i])
}
tweet_activity_by_hour
time_increments <- top_article$h %>% unique() %>% sort()
time_increments
tweet_activity_by_hour <- tibble(t = time_increments,
cum_activity = NA)
for (i in 1:length(time_increments)){
tweet_activity_by_hour$cum_activity[i] = sum(temp <= time_increments[i])
}
tweet_activity_by_hour
activity_by_hour <- tibble(t = time_increments,
cum_activity = NA,
cum_users = NA)
activity_by_hour <- tibble(t = time_increments,
tot_activity = NA,
tot_users = NA)
activity_by_hour <- tibble(t = time_increments,
tot_activity = NA,
tot_users = NA)
for (i in 1:length(time_increments)){
activity_by_hour$tot_activity[i] = sum(top_article$h[i] <= time_increments[i])
activity_by_hour$tot_users[i] =
c(top_article$from_user_id[i][top_article$h[i] <= time_increments[i]],
top_article$to_user_id[i][top_article$h[i] <= time_increments[i]]) %>%
unique()
}
for (i in 1:length(time_increments)){
activity_by_hour$tot_activity[i] = sum(top_article$h[i] <= time_increments[i])
activity_by_hour$tot_users[i] =
c(top_article$from_user_id[i][top_article$h[i] <= time_increments[i]],
top_article$to_user_id[i][top_article$h[i] <= time_increments[i]]) %>%
unique() %>% length()
}
activity_by_hour
activity_by_hour <- tibble(t = time_increments,
tot_activity = NA,
tot_users = NA)
for (i in 1:length(time_increments)){
activity_by_hour$tot_activity[i] = sum(top_article$h <= time_increments[i])
activity_by_hour$tot_users[i] =
c(top_article$from_user_id[i][top_article$h <= time_increments[i]],
top_article$to_user_id[i][top_article$h <= time_increments[i]]) %>%
unique() %>% length()
}
activity_by_hour
activity_by_hour <- tibble(t = time_increments,
tot_activity = NA,
tot_users = NA)
for (i in 1:length(time_increments)){
activity_by_hour$tot_activity[i] = sum(top_article$h <= time_increments[i])
activity_by_hour$tot_users[i] =
c(top_article$from_user_id[top_article$h <= time_increments[i]],
top_article$to_user_id[top_article$h <= time_increments[i]]) %>%
unique() %>% length()
}
activity_by_hour
ggplot(data = activity_by_hour,
mapping = aes(x = t,
y = tot_activity)) +
geom_point() +
scale_x_datetime(breaks=date_breaks("24 hour"), labels=date_format("%m-%d")) +
labs(title = "Cumulative Activity / Active Users by Hour",
x = "Tweet Created At",
y = "Tweet Type")
ggplot(data = activity_by_hour,
mapping = aes(x = t,
y = tot_activity)) +
geom_point() +
labs(title = "Cumulative Activity / Active Users by Hour",
x = "Tweet Created At",
y = "Tweet Type")
ggplot(data = activity_by_hour,
mapping = aes(x = t,
y = tot_activity)) +
geom_point(size = 0.25) +
labs(title = "Cumulative Activity / Active Users by Hour",
x = "Tweet Created At",
y = "Tweet Type")
ggplot(data = activity_by_hour,
mapping = aes(x = t,
y = tot_activity)) +
geom_point(size = 0.25) +
geom_point(data = activity_by_hour,
mapping = aes(x = t, y = tot_users),
color = "blue")
ggplot(data = activity_by_hour,
mapping = aes(x = t,
y = tot_activity)) +
geom_point(size = 0.25) +
geom_point(data = activity_by_hour,
mapping = aes(x = t, y = tot_users),
color = "blue", size = 0.25)
ggplot(data = activity_by_hour,
mapping = aes(x = t,
y = tot_activity)) +
geom_point(size = 0.25) +
geom_point(data = activity_by_hour,
mapping = aes(x = t, y = tot_users),
color = "blue", size = 0.25) +
labs(title = "Cumulative Activity / Active Users by Hour",
x = "Tweet Created At",
y = "Tweet Type")
ggplot(data = activity_by_hour,
mapping = aes(x = t, y = tot_activity)) +
geom_point(size = 0.25) +
geom_point(data = activity_by_hour,
mapping = aes(x = t, y = tot_users),
color = "blue", size = 0.25) +
labs(title = "Cumulative Activity / Active Users by Hour",
x = "Time (Hours)",
y = "Count")
ggplot(data = activity_by_hour,
mapping = aes(x = t, y = tot_activity,
color = "Tweets")) +
geom_point(size = 0.25) +
geom_point(data = activity_by_hour,
mapping = aes(x = t, y = tot_users),
color = "Active Users", size = 0.25) +
labs(title = "Cumulative Activity / Active Users by Hour",
x = "Time (Hours)",
y = "Count")
ggplot(data = activity_by_hour,
mapping = aes(x = t, y = tot_activity)) +
geom_point(size = 0.25, color = "Tweets") +
geom_point(data = activity_by_hour,
mapping = aes(x = t, y = tot_users),
color = "Active Users", size = 0.25) +
labs(title = "Cumulative Activity / Active Users by Hour",
x = "Time (Hours)",
y = "Count")
ggplot(data = activity_by_hour,
mapping = aes(x = t, y = tot_activity)) +
geom_point(size = 0.25) +
geom_point(data = activity_by_hour,
mapping = aes(x = t, y = tot_users),
color = "blue", size = 0.25) +
labs(title = "Cumulative Activity / Active Users by Hour",
x = "Time (Hours)",
y = "Count")
?scale_color_manual(values = colors)
ggplot(data = activity_by_hour,
mapping = aes(x = t, y = tot_activity)) +
geom_point(size = 0.25, aes(color = "tot_activity")) +
geom_point(data = activity_by_hour,
mapping = aes(x = t, y = tot_users,
color = "tot_users"),
size = 0.25) +
labs(title = "Cumulative Activity / Active Users by Hour",
x = "Time (Hours)",
y = "Count")
vensim_data <- activity_by_hour %>%
mutate(t %>% as.integer())
vensim_data
vensim_data <- activity_by_hour %>%
mutate(t = t %>% as.integer())
vensim_data
View(vensim_data)
vensim_data <- activity_by_hour %>%
mutate(t = t %>% round())
vensim_data
vensim_data <- activity_by_hour %>%
mutate(t = t %>% round_up())
vensim_data <- activity_by_hour %>%
mutate(t = t %>% ceiling())
vensim_data
vensim_data <- activity_by_hour %>%
mutate(t = t %>% ceiling()) %>%
group_by(t) %>%
summarise(tot_activity = user_count %>% mean() %>% ceiling())
vensim_data <- activity_by_hour %>%
mutate(t = t %>% ceiling()) %>%
group_by(t) %>%
summarise(tot_activity = tot_users %>% mean() %>% ceiling())
vensim_data <- activity_by_hour %>%
mutate(t = t %>% ceiling()) %>%
group_by(t) %>%
summarise(tot_activity = tot_users %>% mean() %>% round())
vensim_data
vensim_data <- activity_by_hour %>%
mutate(t = t %>% ceiling()) %>%
group_by(t) %>%
summarise(tot_activity = tot_users %>% mean() %>% ceiling())
vensim_data
vensim_data <- activity_by_hour %>%
mutate(t = t %>% ceiling()) %>%
group_by(t) %>%
summarise(tot_users = tot_users %>% mean() %>% ceiling())
vensim_string <- c()
for (i in 1:nrow(vensim_data)){
vensim_string[i] <- print(paste0("(", vensim_data$t[i + 1], ", ",
vensim_data$tot_users[i + 1] -
vensim_data$tot_users[i], ")"))
}
vensim_string <- c(vensim_string[-length(vensim_string)])
vensim_string <- vensim_string %>% paste0(collapse = ", ")
vensim_string
vensim_data %>% head()
vensim_data <- activity_by_hour %>%
mutate(t = t %>% ceiling()) %>%
group_by(t) %>%
summarise(tot_users = tot_users %>% mean() %>% ceiling())
vensim_data %>% head()
row_count <- nrow(vensim_data)
N <- nrow(vensim_data)
vensim_data[2:N] - vensim_data[1:(N-1)]
vensim_data[2:N]
vensim_data$tot_users[2:N]
vensim_data$tot_users[1:(N-1)]
vensim_data$tot_users[2:N] - vensim_data$tot_users[1:(N-1)]
c(0,
vensim_data$tot_users[2:N] - vensim_data$tot_users[1:(N-1)])
vensim_data$change <- c(0,
vensim_data$tot_users[2:N] - vensim_data$tot_users[1:(N-1)])
vensim_data %>% head()
vensim_data %>% tail()
vensim_data %>% head()
vensim_string <- c()
for (i in 1:nrow(vensim_data)){
vensim_string[i] <- print(paste0("(", vensim_data$t[i + 1], ", ",
vensim_data$change, ")"))
}
vensim_string <- c(vensim_string[-length(vensim_string)])
vensim_string <- c()
for (i in 1:nrow(vensim_data)){
vensim_string[i] <- print(paste0("(", vensim_data$t[i], ", ",
vensim_data$change[i], ")"))
}
vensim_string <- c(vensim_string[-length(vensim_string)])
vensim_string <- vensim_string %>% paste0(collapse = ", ")
vensim_string
library(rtweet)
install.packages("rtweet")
library(rtweet)
